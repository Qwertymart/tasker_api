volumes:
  postgres-data: {}

networks:
  monitoring_default:
    external: true

services:
  postgres:
    image: postgres:alpine  
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring_default

  auth_service:
    image: auth_service
    build:
      context: ./auth
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - USER_SERVICE_ADDR=user_service:50051
    depends_on:
      user_service:
        condition: service_started
    networks:
      - monitoring_default

  task_service:
    image: task_service
    build:
      context: ./task
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_SSLMODE=${DB_SSLMODE}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      user_service:
        condition: service_started
    networks:
      - monitoring_default
    
  user_service:
    image: user_service
    build:
      context: ./user
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_SSLMODE=${DB_SSLMODE}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - monitoring_default
    